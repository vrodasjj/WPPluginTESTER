#!/usr/bin/env python3
"""
WordPress Plugin Manager - Installation Script
Release 1.0 Installation and Setup

This script helps set up the WordPress Plugin Manager for first-time use.
"""

import os
import sys
import subprocess
import json
from pathlib import Path

def check_python_version():
    """Verificar que la versi√≥n de Python sea compatible"""
    if sys.version_info < (3, 6):
        print("‚ùå Error: Se requiere Python 3.6 o superior")
        print(f"   Versi√≥n actual: {sys.version}")
        return False
    print(f"‚úÖ Python {sys.version.split()[0]} - Compatible")
    return True

def check_dependencies():
    """Verificar e instalar dependencias requeridas"""
    required_packages = [
        'paramiko',
        'requests',
        'tkinter'  # Generalmente viene con Python
    ]
    
    missing_packages = []
    
    for package in required_packages:
        try:
            if package == 'tkinter':
                import tkinter
            else:
                __import__(package)
            print(f"‚úÖ {package} - Instalado")
        except ImportError:
            missing_packages.append(package)
            print(f"‚ùå {package} - No encontrado")
    
    if missing_packages:
        print(f"\nüì¶ Instalando paquetes faltantes: {', '.join(missing_packages)}")
        for package in missing_packages:
            if package == 'tkinter':
                print("‚ö†Ô∏è  tkinter debe instalarse manualmente seg√∫n tu sistema operativo")
                continue
            try:
                subprocess.check_call([sys.executable, '-m', 'pip', 'install', package])
                print(f"‚úÖ {package} instalado correctamente")
            except subprocess.CalledProcessError:
                print(f"‚ùå Error instalando {package}")
                return False
    
    return True

def create_default_config():
    """Crear archivo de configuraci√≥n por defecto"""
    config_path = Path("config.json")
    
    if config_path.exists():
        print("‚úÖ Archivo de configuraci√≥n ya existe")
        return True
    
    default_config = {
        "ssh": {
            "host": "",
            "port": 22,
            "username": "",
            "password": "",
            "key_file": ""
        },
        "wordpress": {
            "path": "",
            "url": "",
            "db_host": "localhost",
            "db_name": "",
            "db_user": "",
            "db_password": ""
        },
        "settings": {
            "timeout": 30,
            "auto_backup": True,
            "check_health": True
        }
    }
    
    try:
        with open(config_path, 'w', encoding='utf-8') as f:
            json.dump(default_config, f, indent=4, ensure_ascii=False)
        print("‚úÖ Archivo de configuraci√≥n creado: config.json")
        return True
    except Exception as e:
        print(f"‚ùå Error creando configuraci√≥n: {e}")
        return False

def check_wp_cli_manager():
    """Verificar que el m√≥dulo WP-CLI Manager est√© presente"""
    wp_cli_path = Path("wp_cli_manager.py")
    
    if wp_cli_path.exists():
        print("‚úÖ WP-CLI Manager encontrado")
        return True
    else:
        print("‚ùå WP-CLI Manager no encontrado")
        print("   Aseg√∫rate de que wp_cli_manager.py est√© en el mismo directorio")
        return False

def run_initial_setup():
    """Ejecutar configuraci√≥n inicial"""
    print("\nüîß Configuraci√≥n Inicial")
    print("=" * 50)
    
    print("\n1. Configuraci√≥n SSH:")
    print("   - Edita config.json con los datos de tu servidor")
    print("   - Host, puerto, usuario y contrase√±a/clave SSH")
    
    print("\n2. Configuraci√≥n WordPress:")
    print("   - Ruta de instalaci√≥n de WordPress en el servidor")
    print("   - URL del sitio web")
    print("   - Datos de conexi√≥n a la base de datos")
    
    print("\n3. WP-CLI (Recomendado):")
    print("   - Instala WP-CLI en tu servidor para mejor rendimiento")
    print("   - El sistema funcionar√° sin WP-CLI pero con funcionalidad limitada")
    
    print("\n4. Ejecutar la aplicaci√≥n:")
    print("   python wp_plugin_manager.py")

def main():
    """Funci√≥n principal de instalaci√≥n"""
    print("üöÄ WordPress Plugin Manager - Release 1.0")
    print("   Instalaci√≥n y Configuraci√≥n")
    print("=" * 50)
    
    # Verificar Python
    if not check_python_version():
        return False
    
    # Verificar dependencias
    if not check_dependencies():
        return False
    
    # Verificar WP-CLI Manager
    if not check_wp_cli_manager():
        return False
    
    # Crear configuraci√≥n por defecto
    if not create_default_config():
        return False
    
    # Configuraci√≥n inicial
    run_initial_setup()
    
    print("\nüéâ ¬°Instalaci√≥n completada exitosamente!")
    print("\nüìù Pr√≥ximos pasos:")
    print("   1. Edita config.json con tus datos de conexi√≥n")
    print("   2. Ejecuta: python wp_plugin_manager.py")
    print("   3. Usa la pesta√±a 'Conexi√≥n' para probar la conectividad")
    print("   4. ¬°Comienza a gestionar tus plugins!")
    
    return True

if __name__ == "__main__":
    success = main()
    if not success:
        print("\n‚ùå La instalaci√≥n no se complet√≥ correctamente")
        print("   Revisa los errores anteriores y vuelve a intentar")
        sys.exit(1)
    else:
        print("\n‚úÖ Instalaci√≥n exitosa - ¬°Listo para usar!")
        sys.exit(0)